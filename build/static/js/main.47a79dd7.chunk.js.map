{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","components/helpers/helpers.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleOnInputChange","event","setState","target","value","handleOnSubmit","e","preventDefault","props","onSubmit","console","log","reset","filter","this","className","s","form","inputLabel","label","onChange","type","nameInput","required","pattern","title","button","Component","ContactItem","id","contactItem","contactName","contactNumber","ContactList","contacts","onDeleteContact","list","map","item","onClick","Filter","filterInput","App","filterHandler","formSubmitHandler","data","contact","uuidv4","prevState","nameInContact","toLowerCase","trim","isInContact","find","cont","alert","deleteContact","contactId","getVisibleContact","normalizedFilter","toString","includes","parsedContactsFromLs","key","itemsFromLs","localStorage","getItem","JSON","parse","error","Error","getFromLS","prevProps","itemsToSave","setItem","stringify","saveToLS","visibleContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47a79dd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\",\"nameInput\":\"ContactForm_nameInput__1yxA2\",\"inputLabel\":\"ContactForm_inputLabel__3ilUb\",\"label\":\"ContactForm_label__378f8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__5eHQm\",\"contactName\":\"ContactItem_contactName__3Zp2H\",\"contactNumber\":\"ContactItem_contactNumber__Lf19i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"inputLabel\":\"Filter_inputLabel__KDsXr\",\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"container\":\"App_container__1MQN3\"};","import PropTypes from 'prop-types';\nimport { Component } from 'react';\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n\n  handleOnInputChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  handleOnSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    console.log('this state', this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n      filter: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleOnSubmit} className={s.form}>\n        <label className={s.inputLabel}>\n          <span className={s.label}> Name</span>\n          <input\n            onChange={this.handleOnInputChange}\n            type=\"name\"\n            name=\"name\"\n            value={name}\n            className={s.nameInput}\n            required\n          ></input>\n        </label>\n        <label className={s.inputLabel}>\n          <span className={s.label}> Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            onChange={this.handleOnInputChange}\n            value={number}\n            className={s.nameInput}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { ContactForm };\n","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\nconst ContactItem = ({ id, name, number }) => {\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactName}> {`${name}:`}</p>{' '}\n      <p className={s.contactNumber}> {number}</p>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport { ContactItem };\n","import PropTypes from 'prop-types';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport s from './ContactList.module.css';\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={s.item}>\n            <ContactItem\n              name={name}\n              number={number}\n              // onDeleteContact={onDeleteContact}\n            />\n            <button\n              type=\"button\"\n              className={s.button}\n              onClick={() => {\n                onDeleteContact(id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\nexport { ContactList };\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nconst Filter = ({ value, onChange }) => (\n  <>\n    <label className={s.inputLabel}>\n      <span className={s.label}>Find contacts by name</span>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        className={s.filterInput}\n      ></input>\n    </label>\n  </>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { Filter };\n","import { Component } from 'react';\nimport './App.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Filter } from './components/Filter/Filter';\nimport { saveToLS, getFromLS } from './components/helpers/helpers';\nimport s from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  componentDidMount() {\n    const parsedContactsFromLs = getFromLS('contactsData');\n    console.log(parsedContactsFromLs);\n    //проверять есть ли что -то  в LS\n    if (parsedContactsFromLs) {\n      this.setState({ contacts: parsedContactsFromLs });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(' componentDidUpdate');\n    console.log(prevState);\n    console.log(this.state);\n\n    //// проверка, перед тем как записать\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('component  updated');\n      saveToLS('contactsData', this.state.contacts);\n    }\n  }\n  filterHandler = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  formSubmitHandler = data => {\n    const contact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n\n    this.setState(prevState => {\n      console.log(contact.name);\n      const nameInContact = contact.name.toLowerCase().trim();\n      const isInContact = prevState.contacts.find(\n        cont => cont.name.toLowerCase().trim() === nameInContact,\n      );\n      console.log(contact.name);\n      console.log(isInContact);\n      if (isInContact) {\n        alert(`${contact.name} is already in contact`);\n        return;\n      }\n      return {\n        contacts: [contact, ...prevState.contacts],\n      };\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toString().toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter, value } = this.state;\n    const visibleContacts = this.getVisibleContact();\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onSubmit={this.formSubmitHandler}\n          value={value}\n          onChange={this.handleOnInputChange}\n        />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.filterHandler} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","function saveToLS(key, itemsToSave) {\n  try {\n    localStorage.setItem(key, JSON.stringify(itemsToSave));\n  } catch (error) {\n    throw new Error();\n  }\n}\n\nfunction getFromLS(key) {\n  try {\n    const itemsFromLs = localStorage.getItem(key);\n    return itemsFromLs ? JSON.parse(itemsFromLs) : null;\n  } catch (error) {\n    throw new Error();\n  }\n}\nexport { saveToLS, getFromLS };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}